apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-server
  namespace: moderation-system
  labels:
    app.kubernetes.io/name: mcp-server
    app.kubernetes.io/component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: mcp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mcp-server
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: moderation-service-account
      # Deploy to your custom nodepool
      nodeSelector:
        owner: "data-engineer"
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "custom-workload"
        effect: "NoSchedule"
      containers:
      - name: mcp-server
        image: your-registry/mcp-server:latest  # Replace with your image
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: LLM_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: deepseek-connection
              key: llm-endpoint
        - name: LLM_TIMEOUT
          valueFrom:
            secretKeyRef:
              name: deepseek-connection
              key: llm-timeout
        - name: LLM_MAX_RETRIES
          valueFrom:
            secretKeyRef:
              name: deepseek-connection
              key: llm-max-retries
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: moderation-config
              key: log-level
        - name: MAX_CONCURRENT_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: moderation-config
              key: max-concurrent-requests
        - name: ENABLE_METRICS
          valueFrom:
            configMapKeyRef:
              name: moderation-config
              key: enable-metrics
        - name: ENABLE_TRACING
          valueFrom:
            configMapKeyRef:
              name: moderation-config
              key: enable-tracing
        volumeMounts:
        - name: prompt-templates
          mountPath: /app/templates
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
      volumes:
      - name: prompt-templates
        configMap:
          name: prompt-templates
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mcp-server-pdb
  namespace: moderation-system
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mcp-server
